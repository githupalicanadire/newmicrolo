version: "3.4"

services:
  catalogdb:
    image: postgres

  basketdb:
    image: postgres

  distributedcache:
    image: redis

  orderdb:
    image: mcr.microsoft.com/mssql/server

  identitydb:
    image: mcr.microsoft.com/mssql/server

  messagebroker:
    image: rabbitmq:management

  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    ports:
      - "8080:8080"

  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
    ports:
      - "8081:8080"

  discount.grpc:
    image: ${DOCKER_REGISTRY-}discountgrpc
    build:
      context: .
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile
    ports:
      - "8082:8080"

  ordering.api:
    image: ${DOCKER_REGISTRY-}orderingapi
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.API/Dockerfile
    ports:
      - "8083:8080"

  identity.api:
    image: ${DOCKER_REGISTRY-}identityapi
    build:
      context: .
      dockerfile: Services/Identity/Identity.API/Dockerfile
    ports:
      - "8086:8080"

  yarpapigateway:
    image: ${DOCKER_REGISTRY-}yarpapigateway
    build:
      context: .
      dockerfile: ApiGateways/YarpApiGateway/Dockerfile
    ports:
      - "8084:8080"

  shopping.web:
    image: ${DOCKER_REGISTRY-}shoppingweb
    build:
      context: .
      dockerfile: WebApps/Shopping.Web/Dockerfile
    ports:
      - "8085:8080"

volumes:
  postgres_catalog:
  postgres_basket:
